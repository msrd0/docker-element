name: Docker
on:
  push:
    branches: [main]



jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: 
          - i686-unknown-linux-musl
          - x86_64-unknown-linux-musl
          - arm-unknown-linux-musleabihf
          - armv7-unknown-linux-musleabihf
          - aarch64-unknown-linux-musl
    name: ${{ matrix.target }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        id: "rust-toolchain"
      - name: install cross
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cross
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: "${{runner.os}} Target ${{ matrix.target }} Rust ${{steps.rust-toolchain.outputs.cachekey}} Lock ${{hashFiles('Cargo.lock')}}"
      - run: ELEMENT_VERSION=1.11.38 && cross build --release --locked --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.target }}"
          path: |
            target/${{ matrix.target }}/release/crab-hole


            
  docker:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: github_artifacts
      - name: Build and Push Docker Image
        run: |
          image="ghcr.io/msrd0/element"
          docker pull "$image:cache" || true
          docker build . \
            --pull \
            --target builder \
            --cache-from "$image:cache" \
            --tag "$image:cache"
          docker build . \
            --pull \
            --cache-from "$image:cache" \
            --tag "$image"
          version="$(docker run --rm "$image" /bin/element version)"
          docker tag "$image" "$image:$version"
          
          docker login -u msrd0 -p "${{secrets.GITHUB_TOKEN}}" ghcr.io
          docker push "$image:cache"
          docker push "$image:$version"
          docker push "$image"
